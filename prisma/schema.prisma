generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum PaymentType {
  CASH
  CREDIT
}

enum ServiceType {
  CHAR
  DEFAULT
}

model Users {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String
  number    String?
  password  String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  deleted   Boolean   @default(false)
}

model Customer {
  id           String         @unique @default(cuid())
  name         String
  code         String         @unique()
  address      String?
  phoneNumber  String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime?      @updatedAt
  deleted      Boolean        @default(false)
  sales        Sales[]
  Transaction  Transaction[]
  SpecialPrice SpecialPrice[]
}

model Sales {
  id          String      @id @default(cuid())
  quantity    Int         @default(0)
  price       Float       @default(0)
  total       Float       @default(0)
  paymentType PaymentType @default(CREDIT)
  customerId  String
  customer    Customer    @relation(fields: [customerId], references: [id])
  paid        Boolean     @default(false)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime?   @updatedAt
  deleted     Boolean     @default(false)
}

model Transaction {
  id              String    @id @default(cuid())
  quantity        Int       @default(0)
  price           Float     @default(0)
  rate            Float?
  customerId      String
  customer        Customer  @relation(fields: [customerId], references: [id])
  startDate       DateTime
  endDate         DateTime
  balance         Int       @default(0)
  perviousBalance Int       @default(0)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime? @updatedAt
  deleted         Boolean   @default(false)
}

model SpecialPrice {
  id         String      @id @default(cuid())
  customerId String
  customer   Customer    @relation(fields: [customerId], references: [id])
  type       ServiceType @default(DEFAULT)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime?   @updatedAt
  deleted    Boolean     @default(false)
}
